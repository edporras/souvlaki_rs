#!/usr/bin/env ruby

$LOAD_PATH << File.expand_path(File.dirname(__FILE__) + '/../lib')

require 'optparse'
require 'date'
require 'souvlaki_rs'

# This hash will hold all of the options parsed from the command-line
options = {}
optparse = OptionParser.new do |opts|
  opts.banner = "Usage: #{$PROGRAM_NAME} [options] program_code"

  options[:write_tags] = false
  opts.on('-t', '--tag', 'Rewrite tags to the file if needed before importing.') do
    options[:write_tags] = true
  end

  options[:import] = false
  opts.on('-i', '--import', 'Import downloaded into Airtime.') do
    options[:import] = true
  end

  options[:post] = false
  opts.on('-p', '--post', 'Post notification to Basecamp.') do
    options[:post] = true
  end

  opts.on('-a', '--all_opts', 'Equivalent to running with -t -i -p.') do
    options[:write_tags] = true
    options[:import] = true
    options[:post] = true
  end

  options[:date] = nil
  opts.on('-d', '--pub_date YYYYMMDD', 'Use specified date ("YYYYMMDD") instead of default date.') do |date|
    begin
      options[:date] = Date.strptime(date, '%Y%m%d')
    rescue StandardError => e
      SouvlakiRS.logger.error "Invalid date argument (#{date}): #{e}"
      exit
    end
  end

  options[:verbose] = false
  opts.on('-v', '--verbose', 'Logs info messages in addition to warn and errors.') do
    options[:verbose] = true
  end

  opts.on('-l', '--list_program_codes', 'Display list of program codes to pass as the argument.') do
    SouvlakiRS::Config.list_program_codes
    exit
  end

  opts.on('-h', '--help', 'Display this screen') do
    warn opts
    exit
  end
end
optparse.parse!

# arg check
if ARGV.empty?
  warn optparse
  exit 1
end

# it all starts here
#
SouvlakiRS.logger.verbose(options[:verbose])
SouvlakiRS.logger.info "#{$PROGRAM_NAME} - using SouvlakiRS v#{SouvlakiRS::VERSION}"
SouvlakiRS.logger.info "Running fetcher on #{Date.today} with code list: #{ARGV.join(' ')}"

options[:req_date] = options[:date] ? options[:date] : Date.today
srs = SouvlakiRS::Manager.new(options)
srs.process_codes(ARGV)
